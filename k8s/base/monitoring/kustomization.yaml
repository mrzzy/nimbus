#
# Nimbus
# K8s Deployment
# Monitoring
#

apiVersion: kustomize.config.k8s.io/v1beta1
resources:
  - namespace.yaml
  # NOTE: Prometheus Operator CRDs should be upgraded in tandem withn the kube-prometheus helm chart
  - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.59.1/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
  - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.59.1/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
  - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.59.1/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
  - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.59.1/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
  - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.59.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
  - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.59.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
  - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.59.1/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
  - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.59.1/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
helmCharts:
  # Monitoring: Prometheus, Grafana & Prometheus Operator
  - namespace: monitoring
    releaseName: monitor
    name: kube-prometheus-stack
    version: 40.1.0
    repo: https://prometheus-community.github.io/helm-charts
  # Logging: Loki
  - namespace: monitoring
    releaseName: log
    name: loki
    version: 3.1.0
    repo: https://grafana.github.io/helm-charts
    valuesInline:
      loki:
        auth_enabled: false
        commonConfig:
          replication_factor: 1
      # use s3 as a data store to persist logs ingested into loki
      # pass s3 credentials to loki by populating environment with credentials &
      # configuring loki to load them from the environment
        storage:
          type: s3
          s3:
            endpoint: '${S3_ENDPOINT}'
            accessKeyID: '${S3_ACCESS_KEY_ID}'
            secretAccessKey: '${S3_SECRET_ACCESS_KEY}'
          bucketNames:
            ruler: '${LOKI_LOG_BUCKET}'
            chunks: '${LOKI_LOG_BUCKET}'
            admin: '${LOKI_LOG_BUCKET}'
      read:
        extraArgs:
          - "-config.expand-env=true"
        extraEnvFrom:
          - secret: loki-s3-credentials
      write:
        extraArgs:
          - "-config.expand-env=true"
        extraEnvFrom:
          - secret: loki-s3-credentials
      # monitor Loki with Prometheus
      monitoring:
        serviceMonitor:
          enabled: true
