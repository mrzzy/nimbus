#
# Nimbus
# K8s Deployment
# Data Pipeline
#

apiVersion: kustomize.config.k8s.io/v1beta1
resources:
  - namespace.yaml
helmCharts:
  # Airflow: Data Pipeline orchestrator
  - name: airflow
    repo: https://airflow.apache.org
    releaseName: pipeline
    version: 1.9.0
    namespace: pipeline
    valuesInline:
      defaultAirflowTag: 2.5.3rc2-python3.10
      # disable creation of default admin user for security
      # manually create users with Airflow CLI: `airflow users create`
      webserver:
        defaultUser:
          enabled: false
      # use k8s secret to supply airflow webserver with encryption key
      webserverSecretKeySecretName: airflow-webserver-key
      # override default airflow executor
      executor: KubernetesExecutor
      # override default db credentials with custom secret
      data:
        metadataSecretName: pipeline-postgresql
      # disable bundled postgresql deployment
      postgresql:
        enabled: false
      # deploy sync dags from git repository perodically
      dags:
        gitSync:
          enabled: true
          repo: https://github.com/mrzzy/providence.git
          branch: main
          subPath: pipelines
      # ingress for webserver
      ingress:
        web:
          enabled: true
          ingressClassName: nginx
          hosts:
            - name: pipelines.mrzzy.co
              tls:
                # Enable TLS termination for the web Ingress
                enabled: true
                # the name of a pre-created Secret containing a TLS private key and certificate
                secretName:  mrzzy-co-tls
      env:
        # configuration via env vars
        # don't clutter the dag list with example dags
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: "False"
        # email notifications with smtp
        - name: AIRFLOW__SMTP__SMTP_HOST
          value: "smtp.sendgrid.net"
        - name: AIRFLOW__SMTP__SMTP_STARTTLS
          value: "False"
        - name: AIRFLOW__SMTP__SMTP_SSL
          value: "True"
        - name: AIRFLOW__SMTP__SMTP_PORT
          value: "465"
        - name: AIRFLOW__SMTP__SMTP_MAIL_FROM
          value: "Airflow <airflow@pipelines.mrzzy.co>"
        # use in cluster credentials for k8s executor
        - name: AIRFLOW_CONN_KUBERNETES_DEFAULT
          value: |
            {
              "conn_type": "kubernetes",
              "extra": {
                "in_cluster": true
                "namespace": "pipeline"
              }
            }
        # write logs remotely to GCS where they can be retrieved even if k8s pods are deleted.
        # remote logs are needed as we use k8s pod executors that are deleted
        # upon completion and will airflow try to retrieve logs from deleted pods.
        - name: AIRFLOW__LOGGING__REMOTE_LOGGING
          value: "True"
        - name: AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER
          value: "gs://mrzzy-co-pipeline-logs/airflow"
        # delete redundant local copy of the logs
        - name: AIRFLOW__LOGGING__DELETE_LOCAL_LOGS
          value: "True"
      extraEnvFrom: |
        # obtain smtp credentials from secret
        - secretRef:
            name: airflow-smtp
        # register airflow connections from secret
        - secretRef:
            name: airflow-connections
secretGenerator:
  # as airflow is not aware of suffix in generated resources when creating pods
  # to run its tasks, disable name suffix hash on these secrets.
  # deployments that dependent these secrets must be restarted manually on secret change
  - name: pipeline-postgresql
    options:
      disableNameSuffixHash: true
    envs:
      - pipeline-postgresql.env
  - name: airflow-webserver-key
    options:
      disableNameSuffixHash: true
    envs:
      - airflow-webserver-key.env
  - name: airflow-connections
    options:
      disableNameSuffixHash: true
    envs:
      - airflow-connections.env
  - name: airflow-smtp
    options:
      disableNameSuffixHash: true
    envs:
      - airflow-smtp.env
namespace: pipeline
