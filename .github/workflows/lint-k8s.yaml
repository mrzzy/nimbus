#
# Nimbus
# CI
# Lint K8s Workflow
#

name: "Lint & Diff K8s Manifests"
on: push
permissions:
  # needed for actions/checkout to clone repo
  contents: read
  # allow odic token to be issued for auth via GCP's workload identity pool
  id-token: write
jobs:
  dry-run-k8s:
    env:
      KUBECTL_FLAGS: "--server-side --force-conflicts"
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: k8s
    steps:
      - uses: actions/checkout@v3
      - name: "Setup kubectl access to GKE"
        uses: ./.github/actions/setup-gke
      - name: "Template K8s secret .env files"
        working-directory: . # project root
        env:
          OAUTH2_PROXY_CLIENT_ID: "${{ secrets.K8S_OAUTH2_PROXY_CLIENT_ID }}"
          OAUTH2_PROXY_CLIENT_SECRET: "${{ secrets.K8S_OAUTH2_PROXY_CLIENT_SECRET }}"
          OAUTH2_PROXY_COOKIE_SECRET: "${{ secrets.K8S_OAUTH2_PROXY_COOKIE_SECRET }}"
          K8S_AIRFLOW_POSTGRESQL_PASSWORD: "${{ secrets.K8S_AIRFLOW_POSTGRESQL_PASSWORD }}"
          K8S_AIRFLOW_WEBSERVER_KEY: "${{ secrets.K8S_AIRFLOW_WEBSERVER_KEY }}"
          AIRFLOW_CONN_AWS_DEFAULT: "${{ secrets.AIRFLOW_CONN_AWS_DEFAULT }}"
          AIRFLOW_CONN_PVD_SIMPLYGO_SRC: "${{ secrets.AIRFLOW_CONN_PVD_SIMPLYGO_SRC }}"
        run: make k8s-secrets
      - name: "Perform server-side Dry Run of K8s manifests"
        run: >
          kubectl kustomize --enable-helm ./base |
          kubectl apply ${KUBECTL_FLAGS} --dry-run=server -f -
      - name: "Diff K8s manifests with current K8s Cluster's configuration"
        run: |
          # kubectl diff returns status code = 1 when changes are detected,
          # >1 if an actual error occurs
          kubectl kustomize --enable-helm ./base | \
            kubectl diff ${KUBECTL_FLAGS} -f - || EXIT_CODE=$?
          test ${EXIT_CODE:-1} -eq 1
