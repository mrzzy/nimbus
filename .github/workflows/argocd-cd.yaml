#
# nimbus
# K8s ArgoCD
# ci/cd pipeline
#

name: "CI: Deploy ArgoCD & CRDs on Linode k8s"
on:
  push:
    paths:
      - ".github/workflows/argocd-cd.yaml"
      - "k8s/argocd/**"
jobs:
  deploy-argocd:
    name: "Deploy ArgoCD & CRDs on Linode k8s"
    runs-on: ubuntu-20.04
    env:
      KUBECONFIG: kubeconfig.yaml
    steps:
      - uses: actions/checkout@v2
      - name: "Setup Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.1
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false
      - name: "Get k8s Cluster Kubeconfig from Terraform"
        working-directory: "terraform/linode"
        run: |
          terraform init
          terraform apply -refresh-only -auto-approve
          # write kubeconfig to project root
          terraform output -raw k8s_singapore_kubeconfig | base64 -d >../../$KUBECONFIG
      - name: "Dry Run: Apply ArgoCD manifests on k8s"
        run: kubectl apply --dry-run=server -k k8s/kustomize/argocd
      - name: "Apply ArgoCD manifests on k8s"
        if: ${{ github.ref == 'refs/heads/main' }}
        run: kubectl apply -k k8s/kustomize/argocd

      - name: "Dry Run: Apply ArgoCD CRD manifests on k8s"
        run: kubectl apply --dry-run=server --recursive -n argocd -f k8s/argocd
      - name: "Apply ArgoCD CRD manifests on k8s"
        if: ${{ github.ref == 'refs/heads/main' }}
        run: kubectl apply -n argocd --recursive -f k8s/argocd
