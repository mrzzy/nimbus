#
# Nimbus
# Terraform: Google Cloud Platform
# Deploy Pipeline
#

name: "Deploy Terraform on Google Cloud Platform"
on:
  workflow_dispatch:
    inputs:
      # setting: whether to deploy the warp vm
      warp_vm_deploy:
        type: boolean
        description: "Deploy WARP VM?"
        required: true
      # warp vm machine type setting to control cpu, ram & cost of deployed vm
      warp_vm_machine_type:
        type: choice
        description: "WARM VM Machine Type (CPU & RAM)"
        required: true
        options:
          - "e2-micro - 0.25CPU, 1GB"
          - "e2-small - 0.5CPU, 2GB"
          - "e2-medium - 1CPU, 4GB"
          - "e2-standard-2 - 2CPU, 8GB"
          - "e2-standard-4 - 4CPU, 16GB"
          - "e2-standard-8 - 8CPU, 32GB"
      # config vm image used to start warp vm
      warp_vm_image:
        type: choice
        description: "WARP VM Boot Image"
        required: true
        options:
          - "warp-box"
          - "warp-box-dev"

jobs:
  apply-terraform:
    name: "Apply Terraform deployment"
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v2
      - name: "Setup Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.9
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: "Terraform Init"
        run: terraform init
      - name: "Terraform Apply"
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          TF_VAR_has_warp_vm: "${{ github.event.inputs.warp_vm_deploy }}"
          TF_VAR_warp_image: "${{ github.event.inputs.warp_vm_image }}"
        run: >
          terraform apply
          -auto-approve=true
          -var="warp_machine_type=$(
            echo '${{ github.event.inputs.warp_vm_machine_type }}' | cut -d ' ' -f 1 -n
          )"
